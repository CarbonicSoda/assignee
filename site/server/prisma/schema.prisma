generator client {
  provider = "prisma-client"
  output   = "../src/prisma"
}

datasource db {
  provider = "sqlite"
  url      = "file:../src/app.db"
}

model User {
  uid     Int      @id @default(autoincrement())
  mail    String   @unique
  name    String
  created DateTime @default(now())
  updated DateTime @updatedAt
  Pass    Pass?
  Sess    Sess[]
  Member  Member[]
  Submit  Submit[]
}

model Pass {
  uid     Int      @id
  hash    Bytes
  salt    Bytes
  updated DateTime @updatedAt
  User    User     @relation(fields: [uid], references: [uid], onUpdate: Restrict, onDelete: Cascade)
}

model Sess {
  sid     Int      @id @default(autoincrement())
  uid     Int
  hash    Bytes
  salt    Bytes
  created DateTime @default(now())
  User    User     @relation(fields: [uid], references: [uid], onUpdate: Restrict, onDelete: Cascade)

  @@index([uid])
}

model Team {
  tid     Int      @id @default(autoincrement())
  name    String
  desc    String
  created DateTime @default(now())
  updated DateTime @updatedAt
  Invite  Invite[]
  Member  Member[]
  Assign  Assign[]
}

model Invite {
  tid     Int      @id
  code    Bytes    @unique
  created DateTime @default(now())
  Team    Team     @relation(fields: [tid], references: [tid], onUpdate: Restrict, onDelete: Cascade)
}

model Member {
  uid     Int
  tid     Int
  auth    Boolean  @default(false)
  created DateTime @default(now())
  updated DateTime @updatedAt
  User    User     @relation(fields: [uid], references: [uid], onUpdate: Restrict, onDelete: Cascade)
  Team    Team     @relation(fields: [tid], references: [tid], onUpdate: Restrict, onDelete: Cascade)

  @@id([uid, tid], name: "cpk")
  @@index([tid])
}

model Assign {
  aid     Int      @id @default(autoincrement())
  tid     Int
  name    String
  desc    String
  dead    DateTime
  created DateTime @default(now())
  updated DateTime @updatedAt
  Team    Team     @relation(fields: [tid], references: [tid], onUpdate: Restrict, onDelete: Cascade)
  Submit  Submit[]

  @@index([tid])
}

model Submit {
  sid     Int      @id @default(autoincrement())
  uid     Int
  aid     Int
  done    Boolean  @default(false)
  mark    Grades?
  comm    String?
  created DateTime @default(now())
  updated DateTime @updatedAt
  User    User     @relation(fields: [uid], references: [uid], onUpdate: Restrict, onDelete: Cascade)
  Assign  Assign   @relation(fields: [aid], references: [aid], onUpdate: Restrict, onDelete: Cascade)

  @@unique([uid, aid])
}

enum Grades {
  A
  B
  C
  F
}
